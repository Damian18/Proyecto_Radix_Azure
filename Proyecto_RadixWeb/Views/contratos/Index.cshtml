@model Proyecto_RadixWeb.Models.MultiplesClases
@{
    ViewBag.Title = "Index";
}

<div id="contenido_vista">
    <div class="card mb-3 mt-2">
        <div class="card-header">
            <i class="fa fa-table"></i> Lista de Contratos
        </div>
        <div class="card-body">
            <div class="table-responsive">

                <h3 class="ml-4">
                    <a class="btn btn-outline-success btn-sm m-0 documento" href="#" data-toggle="modal" data-target="#NewPersona">
                        Nuevo Trabajador
                    </a>
                </h3>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                RUT
                            </th>
                            <th>
                                Nombre
                            </th>
                            <th>
                                Apellidos
                            </th>

                            <th>
                                Cargo
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ObjEContrato)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.personas.Per_Rut)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.personas.Per_Nom)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.personas.Per_ApePat)
                                    @Html.DisplayFor(modelItem => item.personas.Per_ApeMat)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.personas.cargos.Car_Nom)
                                </td>
                                <td>

                                    @if (item.personas.cargos.Car_Nom != "Agricola")
                                    {
                                        <a class="btn btn-outline-success btn-sm m-0 cuenta" id="@item.personas.cargos.Car_Nom" name="@item.Per_Rut" href="#" data-toggle="modal" data-target="#NewCuenta">
                                            Crear Cuenta
                                        </a>
                                        @*<a href="@Url.Action("RedirecionarCuenta", "Contratos", new { subemp_id = ViewBag.subemp_id, per_rut = item.Per_Rut, car_nom = item.personas.cargos.Car_Nom})"
                                               class="btn btn-outline-success btn-sm m-0">
                                                Crear Cuenta
                                            </a>*@

                                    }

                                    @if (item.Doc_Id == null)
                                    {
                                        <a class="btn btn-outline-success btn-sm m-0" id="@item.Con_Id" href="#" data-toggle="modal" data-target="#MiDoc">
                                            Agregar Contrato
                                        </a>
                                    }
                                    else if (item.Doc_Id != null)
                                    {

                                        <a class="btn btn-success" href="@Url.Action("ViewPdf", "Contratos", new { id = item.Doc_Id })" target="_blank">Ver PDF</a>

                                        <a class="btn btn-success" href="@Url.Action("DescargarDocx","Contratos",new { id= item.Doc_Id})">Descargar Word</a>

                                    }


                                    @*<a href="@Url.Action("Edit", "Contratos", new { id = item.Con_Id })" class="btn btn-outline-success btn-sm m-0">
                                            Editar
                                        </a>
                                        <a href="@Url.Action("Delete", "Contratos", new { id = item.Con_Id })" class="btn btn-outline-success btn-sm m-0">
                                            Eliminar
                                        </a>*@

                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="MiDoc" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("Index", "Contratos", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            @Html.AntiForgeryToken()

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Nueva Contrato</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!--Contenido del centro-->
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                    @Html.Hidden("Con_id")

                    <div class="form-group">
                        @Html.LabelFor(model => model.ObjDocumentos.Doc_Nom)
                        @Html.Editor("Doc_Nom", new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.Editor("PC_Nom", new { htmlAttributes = new { @class = "form-control" } })*@


                    </div>

                    <div class="input-group">
                        Estado
                        <div class="col-md-10">
                            <input type="file" name="plantilla" />
                        </div>
                    </div>

                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        }
    </div>
</div>
<div class="modal fade bd-example-modal" id="NewCuenta" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("CuentaPersonas", "Account", new { subemp_id = ViewBag.subemp_id }, FormMethod.Post))
        {

            @Html.AntiForgeryToken()

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Crear Cuenta</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!--Contenido del centro-->
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ObjPersonas.Per_Rut)
                    @Html.HiddenFor(model => model.ObjCargos.Car_Nom)

                    <div class="row">
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-10 col-md-10">
                            @Html.LabelFor(model => model.ObjRegistrar.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjRegistrar.Email, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-10 col-md-10">
                            @Html.LabelFor(model => model.ObjRegistrar.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjRegistrar.Password, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-10 col-md-10">
                            @Html.LabelFor(model => model.ObjRegistrar.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjRegistrar.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        </div>



                    </div>
                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade bd-example-modal-lg" id="NewPersona" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        @using (Html.BeginForm("AddPersonas", "Contratos", new { subemp_id = ViewBag.subemp_id }, FormMethod.Post))
        {

            @Html.AntiForgeryToken()

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Nuevo Trabajador</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!--Contenido del centro-->
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="row">
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_Rut, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_Rut, new { htmlAttributes = new { @class = "form-control" } })

                        </div>


                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_Nom, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_Nom, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_ApePat, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_ApePat, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_ApeMat, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_ApeMat, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_Dir, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_Dir, new { htmlAttributes = new { @class = "form-control" } })

                        </div>

                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_Tel, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Car_Id, "Car_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("Car_Id", null, htmlAttributes: new { @class = "form-control" })

                        </div>

                        <div class="form-group col-sm-5 col-md-5">
                            @Html.LabelFor(model => model.ObjPersonas.Per_Suel, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ObjPersonas.Per_Suel, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="col-sm-1 col-md-1"></div>
                        <div class="form-group col-sm-3 col-md-3">
                            @Html.LabelFor(model => model.ObjPersonas.Nac_Id, "Nac_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("Nac_Id", null, htmlAttributes: new { @class = "form-control" })

                        </div>

                        <div class="form-group col-sm-4 col-md-4">
                            @Html.LabelFor(model => model.ObjPersonas.Gen_Id, "Gen_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("Gen_Id", null, htmlAttributes: new { @class = "form-control" })

                        </div>

                        <div class="form-group col-sm-3 col-md-3">
                            @Html.LabelFor(model => model.ObjPersonas.EC_Id, "EC_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("EC_Id", null, htmlAttributes: new { @class = "form-control" })

                        </div>
                        <div class="col-sm-1 col-md-1"></div>


                    </div>
                </div>


                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        }
    </div>
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>

    $(document).ready(function () {
        $('#contenido_vista').appendTo('#contenido_general');
    });

    $(".documento").on("click", function () {

        $("#Con_id").val($(this).attr("id"));

    });
    $(".cuenta").on("click", function () {

        $("#ObjPersonas_Per_Rut").val($(this).attr("name"));
        $("#ObjCargos_Car_Nom").val($(this).attr("id"));
    });

</script>
